/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dev.pkg2.pkg1.opdr.pkg1;

import java.sql.*;
import javax.swing.JOptionPane;
import java.util.Date;

/**
 *
 * @author Gebruiker
 */
public class PaimentFrame extends javax.swing.JFrame {

    Connection con;
    Statement st;
    ResultSet rs;
    int balance;
    int charslots;
    
    public PaimentFrame() {
        initComponents();
        connect();
        setText();
    }
    
    public void connect(){
        try{
            Class.forName("org.postgresql.Driver");
            con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/DEV 2.1 Opdr 1", "postgres", "steven");
            if(con != null)
                System.out.println("Connected PaimentFrame");
            st = con.createStatement();
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        AccB = new javax.swing.JTextField();
        PayD = new javax.swing.JButton();
        Sub = new javax.swing.JComboBox();
        PayS = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        AccCS = new javax.swing.JTextField();
        PayC = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Current balance: €");

        AccB.setText("Amount");

        PayD.setText("Deposite");
        PayD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayDActionPerformed(evt);
            }
        });

        Sub.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        PayS.setText("Add");
        PayS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaySActionPerformed(evt);
            }
        });

        jLabel2.setText("Character slots: ");

        AccCS.setText("Amount");

        PayC.setText("Add");
        PayC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(AccCS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(AccB, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Sub, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PayD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PayS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PayC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AccB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PayD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PayS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AccCS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PayC))
                .addContainerGap(137, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void setText(){
        try{
            String sql = "select balance from users where user_name = '"+LoginFrame.user+"'";
            rs = st.executeQuery(sql);
            while(rs.next()){
                this.balance = rs.getInt("balance");
                jLabel1.setText("Current balance: € "+balance+",00");
            }
            String sql2 = "select character_slots from users where user_name = '"+LoginFrame.user+"'";
            rs = st.executeQuery(sql2);
            while(rs.next()){
                this.charslots = rs.getInt("character_slots");
                jLabel2.setText("Character slots: "+charslots+"");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        Sub.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 month", "2 months", "3 months", "12 months" }));
    }
    
    private void PayDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayDActionPerformed
        try{
            String sql = "select balance from users where user_name = '"+LoginFrame.user+"'";
            rs = st.executeQuery(sql);
            while(rs.next()){
                this.balance = rs.getInt("balance");
            }  
            int bal = Integer.parseInt(AccB.getText())+balance;
            String sql1 = "update users set balance='"+bal+"' where user_name='"+LoginFrame.user+"'";
            st.execute(sql1);
            rs = st.executeQuery(sql);
            while(rs.next()){
                this.balance = rs.getInt("balance");
                jLabel1.setText("Current balance: € "+balance+",00");
            }            
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_PayDActionPerformed

    private void PaySActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaySActionPerformed
        try{
            String sub = Sub.getSelectedItem().toString();
            String sql3 = "select balance from users where user_name = '"+LoginFrame.user+"'";
            rs = st.executeQuery(sql3);
            while(rs.next()){
                this.balance = rs.getInt("balance");
            }  
            if(sub == "1 month" && balance >= 5){                
                Date date = new Date();
                String sql = "update users set last_payment='"+date+"' where user_name='"+LoginFrame.user+"'";
                st.execute(sql);
                String sql2 = "update users set months_payed=1 where user_name='"+LoginFrame.user+"'";
                st.execute(sql2);
                this.balance = balance - 5;
            }else if(sub == "2 months" && balance >= 8){
                Date date = new Date();
                String sql = "update users set last_payment='"+date+"' where user_name='"+LoginFrame.user+"'";
                st.execute(sql);
                String sql2 = "update users set months_payed=2 where user_name='"+LoginFrame.user+"'";
                st.execute(sql2);
                this.balance = balance - 8;
            }else if(sub == "3 months" && balance >= 10){
                Date date = new Date();
                String sql = "update users set last_payment='"+date+"' where user_name='"+LoginFrame.user+"'";
                st.execute(sql);
                String sql2 = "update users set months_payed=3 where user_name='"+LoginFrame.user+"'";
                st.execute(sql2);
                this.balance = balance - 10;
            }else if(sub == "12 months" && balance >= 35){
                Date date = new Date();
                String sql = "update users set last_payment='"+date+"' where user_name='"+LoginFrame.user+"'";
                st.execute(sql);
                String sql2 = "update users set months_payed=12 where user_name='"+LoginFrame.user+"'";
                st.execute(sql2);
                this.balance = balance - 35;
            }else{
                JOptionPane.showMessageDialog(null, "Not enough money, please add.");
            }
            String sql1 = "update users set balance='"+balance+"' where user_name='"+LoginFrame.user+"'";
            st.execute(sql1);
            rs = st.executeQuery(sql3);
            while(rs.next()){
                this.balance = rs.getInt("balance");
                jLabel1.setText("Current balance: € "+balance+",00");
            }  
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_PaySActionPerformed

    private void PayCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayCActionPerformed
        try{
            int buychar = Integer.parseInt(AccCS.getText());
            String sql2 = "select balance from users where user_name = '"+LoginFrame.user+"'";
            rs = st.executeQuery(sql2);
            while(rs.next()){
                this.balance = rs.getInt("balance");
            }
            if(balance >= buychar){
                String sql = "select character_slots from users where user_name = '"+LoginFrame.user+"'";
                rs = st.executeQuery(sql);
                while(rs.next()){
                    this.charslots = rs.getInt("character_slots");
                }  
                int chars = Integer.parseInt(AccCS.getText())+charslots;
                String sql1 = "update users set character_slots='"+chars+"' where user_name='"+LoginFrame.user+"'";
                st.execute(sql1);
                rs = st.executeQuery(sql);
                while(rs.next()){
                    this.charslots = rs.getInt("character_slots");
                    jLabel2.setText("Character slots: "+charslots+"");
                }
                this.balance = balance - buychar;
            }else{
                JOptionPane.showMessageDialog(null, "Not enough money, please add.");
            }
            String sql3 = "update users set balance='"+balance+"' where user_name='"+LoginFrame.user+"'";
            st.execute(sql3);
            rs = st.executeQuery(sql2);
            while(rs.next()){
                this.balance = rs.getInt("balance");
                jLabel1.setText("Current balance: € "+balance+",00");
            } 
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_PayCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaimentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaimentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaimentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaimentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaimentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccB;
    private javax.swing.JTextField AccCS;
    private javax.swing.JButton PayC;
    private javax.swing.JButton PayD;
    private javax.swing.JButton PayS;
    private javax.swing.JComboBox Sub;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
